import * as TOKEN from './token';

export const colors = {
  primary: {
    DEFAULT: `var(--my-colors-primary, ${TOKEN.colors.violet[500]})`,
    50: `var(--my-colors-primary-50, ${TOKEN.colors.violet[50]})`,
    100: `var(--my-colors-primary-100, ${TOKEN.colors.violet[100]})`,
    200: `var(--my-colors-primary-200, ${TOKEN.colors.violet[200]})`,
    300: `var(--my-colors-primary-300, ${TOKEN.colors.violet[300]})`,
    400: `var(--my-colors-primary-400, ${TOKEN.colors.violet[400]})`,
    500: `var(--my-colors-primary-500, ${TOKEN.colors.violet[500]})`,
    600: `var(--my-colors-primary-600, ${TOKEN.colors.violet[600]})`,
    700: `var(--my-colors-primary-700, ${TOKEN.colors.violet[700]})`,
    800: `var(--my-colors-primary-800, ${TOKEN.colors.violet[800]})`,
    900: `var(--my-colors-primary-900, ${TOKEN.colors.violet[900]})`,
    light: `var(--my-colors-primary-light, ${TOKEN.colors.violet[200]})`,
    dark: `var(--my-colors-primary-dark, ${TOKEN.colors.violet[600]})`,
    hover: `var(--my-colors-primary-hover, ${TOKEN.colors.violet[600]})`,
    pressed: `var(--my-colors-primary-pressed, ${TOKEN.colors.violet[700]})`,
  },
  info: {
    DEFAULT: `var(--my-colors-info, ${TOKEN.colors.blue[500]})`,
    50: `var(--my-colors-info-50, ${TOKEN.colors.blue[50]})`,
    100: `var(--my-colors-info-100, ${TOKEN.colors.blue[100]})`,
    200: `var(--my-colors-info-200, ${TOKEN.colors.blue[200]})`,
    300: `var(--my-colors-info-300, ${TOKEN.colors.blue[300]})`,
    400: `var(--my-colors-info-400, ${TOKEN.colors.blue[400]})`,
    500: `var(--my-colors-info-500, ${TOKEN.colors.blue[500]})`,
    600: `var(--my-colors-info-600, ${TOKEN.colors.blue[600]})`,
    700: `var(--my-colors-info-700, ${TOKEN.colors.blue[700]})`,
    800: `var(--my-colors-info-800, ${TOKEN.colors.blue[800]})`,
    900: `var(--my-colors-info-900, ${TOKEN.colors.blue[900]})`,
    light: `var(--my-colors-info-light, ${TOKEN.colors.blue[200]})`,
    dark: `var(--my-colors-info-dark, ${TOKEN.colors.blue[600]})`,
    hover: `var(--my-colors-info-hover, ${TOKEN.colors.blue[600]})`,
    pressed: `var(--my-colors-info-pressed, ${TOKEN.colors.blue[700]})`,
  },
  success: {
    DEFAULT: `var(--my-colors-success, ${TOKEN.colors.green[500]})`,
    50: `var(--my-colors-success-50, ${TOKEN.colors.green[50]})`,
    100: `var(--my-colors-success-100, ${TOKEN.colors.green[100]})`,
    200: `var(--my-colors-success-200, ${TOKEN.colors.green[200]})`,
    300: `var(--my-colors-success-300, ${TOKEN.colors.green[300]})`,
    400: `var(--my-colors-success-400, ${TOKEN.colors.green[400]})`,
    500: `var(--my-colors-success-500, ${TOKEN.colors.green[500]})`,
    600: `var(--my-colors-success-600, ${TOKEN.colors.green[600]})`,
    700: `var(--my-colors-success-700, ${TOKEN.colors.green[700]})`,
    800: `var(--my-colors-success-800, ${TOKEN.colors.green[800]})`,
    900: `var(--my-colors-success-900, ${TOKEN.colors.green[900]})`,
    light: `var(--my-colors-success-light, ${TOKEN.colors.green[200]})`,
    dark: `var(--my-colors-success-dark, ${TOKEN.colors.green[600]})`,
    hover: `var(--my-colors-success-hover, ${TOKEN.colors.green[600]})`,
    pressed: `var(--my-colors-success-pressed, ${TOKEN.colors.green[700]})`,
  },
  error: {
    DEFAULT: `var(--my-colors-error, ${TOKEN.colors.red[500]})`,
    50: `var(--my-colors-error-50, ${TOKEN.colors.red[50]})`,
    100: `var(--my-colors-error-100, ${TOKEN.colors.red[100]})`,
    200: `var(--my-colors-error-200, ${TOKEN.colors.red[200]})`,
    300: `var(--my-colors-error-300, ${TOKEN.colors.red[300]})`,
    400: `var(--my-colors-error-400, ${TOKEN.colors.red[400]})`,
    500: `var(--my-colors-error-500, ${TOKEN.colors.red[500]})`,
    600: `var(--my-colors-error-600, ${TOKEN.colors.red[600]})`,
    700: `var(--my-colors-error-700, ${TOKEN.colors.red[700]})`,
    800: `var(--my-colors-error-800, ${TOKEN.colors.red[800]})`,
    900: `var(--my-colors-error-900, ${TOKEN.colors.red[900]})`,
    light: `var(--my-colors-error-light, ${TOKEN.colors.red[200]})`,
    dark: `var(--my-colors-error-dark, ${TOKEN.colors.red[600]})`,
    hover: `var(--my-colors-error-hover, ${TOKEN.colors.red[600]})`,
    pressed: `var(--my-colors-error-pressed, ${TOKEN.colors.red[700]})`,
  },
  warning: {
    DEFAULT: `var(--my-colors-warning, ${TOKEN.colors.orange[500]})`,
    50: `var(--my-colors-warning-50, ${TOKEN.colors.orange[50]})`,
    100: `var(--my-colors-warning-100, ${TOKEN.colors.orange[100]})`,
    200: `var(--my-colors-warning-200, ${TOKEN.colors.orange[200]})`,
    300: `var(--my-colors-warning-300, ${TOKEN.colors.orange[300]})`,
    400: `var(--my-colors-warning-400, ${TOKEN.colors.orange[400]})`,
    500: `var(--my-colors-warning-500, ${TOKEN.colors.orange[500]})`,
    600: `var(--my-colors-warning-600, ${TOKEN.colors.orange[600]})`,
    700: `var(--my-colors-warning-700, ${TOKEN.colors.orange[700]})`,
    800: `var(--my-colors-warning-800, ${TOKEN.colors.orange[800]})`,
    900: `var(--my-colors-warning-900, ${TOKEN.colors.orange[900]})`,
    light: `var(--my-colors-warning-light, ${TOKEN.colors.orange[200]})`,
    dark: `var(--my-colors-warning-dark, ${TOKEN.colors.orange[600]})`,
    hover: `var(--my-colors-warning-hover, ${TOKEN.colors.orange[600]})`,
    pressed: `var(--my-colors-warning-pressed, ${TOKEN.colors.orange[700]})`,
  },
  neutral: {
    DEFAULT: `var(--my-colors-neutral, ${TOKEN.colors.gray[200]})`,
    50: `var(--my-colors-neutral-50, ${TOKEN.colors.gray[50]})`,
    100: `var(--my-colors-neutral-100, ${TOKEN.colors.gray[100]})`,
    200: `var(--my-colors-neutral-200, ${TOKEN.colors.gray[200]})`,
    300: `var(--my-colors-neutral-300, ${TOKEN.colors.gray[300]})`,
    400: `var(--my-colors-neutral-400, ${TOKEN.colors.gray[400]})`,
    500: `var(--my-colors-neutral-500, ${TOKEN.colors.gray[500]})`,
    600: `var(--my-colors-neutral-600, ${TOKEN.colors.gray[600]})`,
    700: `var(--my-colors-neutral-700, ${TOKEN.colors.gray[700]})`,
    800: `var(--my-colors-neutral-800, ${TOKEN.colors.gray[800]})`,
    900: `var(--my-colors-neutral-900, ${TOKEN.colors.gray[900]})`,
    hover: `var(--my-colors-neutral-hover, ${TOKEN.colors.gray[300]})`,
    pressed: `var(--my-colors-neutral-pressed, ${TOKEN.colors.gray[400]})`,
  },
  fg: {
    primary: `var(--my-colors-fg-primary, ${TOKEN.colors.white})`,
    success: `var(--my-colors-fg-success, ${TOKEN.colors.white})`,
    info: `var(--my-colors-fg-info, ${TOKEN.colors.white})`,
    warning: `var(--my-colors-fg-warning, ${TOKEN.colors.white})`,
    error: `var(--my-colors-fg-error, ${TOKEN.colors.white})`,
    neutral: `var(--my-colors-fg-neutral, ${TOKEN.colors.black})`,
    title: `var(--my-colors-fg-title, ${TOKEN.colors.gray[900]})`,
    description: `var(--my-colors-fg-description, ${TOKEN.colors.gray[800]})`,
    placeholder: `var(--my-colors-fg-placeholder, ${TOKEN.colors.gray[400]})`,
    caption: `var(--my-colors-fg-caption, ${TOKEN.colors.gray[500]})`,
    highlight: `var(--my-colors-fg-highlight, ${TOKEN.colors.gray[800]})`,
  },
  muted: {
    DEFAULT: `var(--my-colors-muted, ${TOKEN.colors.gray[300]})`,
  },
  boundary: `var(--my-colors-boundary, ${TOKEN.colors.gray[300]})`,
  layer1: `var(--my-colors-layer1, ${TOKEN.colors.gray[100]})`,
  dimmed: `var(--my-colors-dimmed, ${TOKEN.colors.blackAlpha[700]})`,
  track: `var(--my-colors-track, ${TOKEN.colors.gray[300]})`,
} as const;

export const fontSizes = {
  heading: {
    DEFAULT: `var(--my-fontSizes-heading, ${TOKEN.fontSizes['4xl']})`,
    lg: `var(--my-fontSizes-heading-lg, ${TOKEN.fontSizes['5xl']})`,
    md: `var(--my-fontSizes-heading-md, ${TOKEN.fontSizes['4xl']})`,
    sm: `var(--my-fontSizes-heading-sm, ${TOKEN.fontSizes['3xl']})`,
  },
  body: {
    DEFAULT: `var(--my-fontSizes-body, ${TOKEN.fontSizes['lg']})`,
    lg: `var(--my-fontSizes-body-lg, ${TOKEN.fontSizes['xl']})`,
    md: `var(--my-fontSizes-body-md, ${TOKEN.fontSizes['lg']})`,
    sm: `var(--my-fontSizes-body-sm, ${TOKEN.fontSizes['md']})`,
  },
} as const;

export const duration = {
  normal: {
    DEFAULT: 'var(--my-duration-normal, 300ms)',
  },
} as const;
