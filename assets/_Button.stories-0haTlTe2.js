import{j as l}from"./jsx-runtime-qGIIFXMu.js";import{r as _}from"./index-CDs2tPxN.js";/**
 * @license lucide-react v0.378.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const _r=r=>r.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),dr=(...r)=>r.filter((e,t,o)=>!!e&&o.indexOf(e)===t).join(" ");/**
 * @license lucide-react v0.378.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var kr={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};/**
 * @license lucide-react v0.378.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Sr=_.forwardRef(({color:r="currentColor",size:e=24,strokeWidth:t=2,absoluteStrokeWidth:o,className:n="",children:i,iconNode:a,...s},c)=>_.createElement("svg",{ref:c,...kr,width:e,height:e,stroke:r,strokeWidth:o?Number(t)*24/Number(e):t,className:dr("lucide",n),...s},[...a.map(([d,m])=>_.createElement(d,m)),...Array.isArray(i)?i:[i]]));/**
 * @license lucide-react v0.378.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const D=(r,e)=>{const t=_.forwardRef(({className:o,...n},i)=>_.createElement(Sr,{ref:i,iconNode:e,className:dr(`lucide-${_r(r)}`,o),...n}));return t.displayName=`${r}`,t};/**
 * @license lucide-react v0.378.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Cr=D("Ellipsis",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"19",cy:"12",r:"1",key:"1wjl8i"}],["circle",{cx:"5",cy:"12",r:"1",key:"1pcz8c"}]]);/**
 * @license lucide-react v0.378.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const wr=D("LoaderCircle",[["path",{d:"M21 12a9 9 0 1 1-6.219-8.56",key:"13zald"}]]);/**
 * @license lucide-react v0.378.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const T=D("Search",[["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}],["path",{d:"m21 21-4.3-4.3",key:"1qie3q"}]]);function E(r){return typeof r=="object"&&r!=null&&!Array.isArray(r)}function pr(r){return Object.fromEntries(Object.entries(r??{}).filter(([e,t])=>t!==void 0))}var Br=r=>r==="base";function jr(r){return r.slice().filter(e=>!Br(e))}function L(r){return String.fromCharCode(r+(r>25?39:97))}function Ir(r){let e="",t;for(t=Math.abs(r);t>52;t=t/52|0)e=L(t%52)+e;return L(t%52)+e}function zr(r,e){let t=e.length;for(;t;)r=r*33^e.charCodeAt(--t);return r}function Rr(r){return Ir(zr(5381,r)>>>0)}var ur=/\s*!(important)?/i;function Er(r){return typeof r=="string"?ur.test(r):!1}function Or(r){return typeof r=="string"?r.replace(ur,"").trim():r}function gr(r){return typeof r=="string"?r.replaceAll(" ","_"):r}var O=r=>{const e=new Map;return(...o)=>{const n=JSON.stringify(o);if(e.has(n))return e.get(n);const i=r(...o);return e.set(n,i),i}};function N(...r){return r.filter(Boolean).reduce((t,o)=>(Object.keys(o).forEach(n=>{const i=t[n],a=o[n];E(i)&&E(a)?t[n]=N(i,a):t[n]=a}),t),{})}var Tr=r=>r!=null;function mr(r,e,t={}){const{stop:o,getKey:n}=t;function i(a,s=[]){if(E(a)||Array.isArray(a)){const c={};for(const[d,m]of Object.entries(a)){const f=(n==null?void 0:n(d,m))??d,p=[...s,f];if(o!=null&&o(a,p))return e(a,s);const u=i(m,p);Tr(u)&&(c[f]=u)}return c}return e(a,s)}return i(r)}function Pr(r,e){return r.reduce((t,o,n)=>{const i=e[n];return o!=null&&(t[i]=o),t},{})}function br(r,e,t=!0){const{utility:o,conditions:n}=e,{hasShorthand:i,resolveShorthand:a}=o;return mr(r,s=>Array.isArray(s)?Pr(s,n.breakpoints.keys):s,{stop:s=>Array.isArray(s),getKey:t?s=>i?a(s):s:void 0})}var Ar={shift:r=>r,finalize:r=>r,breakpoints:{keys:[]}},Dr=r=>typeof r=="string"?r.replaceAll(/[\n\s]+/g," "):r;function Nr(r){const{utility:e,hash:t,conditions:o=Ar}=r,n=a=>[e.prefix,a].filter(Boolean).join("-"),i=(a,s)=>{let c;if(t){const d=[...o.finalize(a),s];c=n(e.toHash(d,Rr))}else c=[...o.finalize(a),n(s)].join(":");return c};return O(({base:a,...s}={})=>{const c=Object.assign(s,a),d=br(c,r),m=new Set;return mr(d,(f,p)=>{const u=Er(f);if(f==null)return;const[h,...y]=o.shift(p),k=jr(y),S=e.transform(h,Or(Dr(f)));let v=i(k,S.className);u&&(v=`${v}!`),m.add(v)}),Array.from(m).join(" ")})}function Lr(...r){return r.flat().filter(e=>E(e)&&Object.keys(pr(e)).length>0)}function Mr(r){function e(n){const i=Lr(...n);return i.length===1?i:i.map(a=>br(a,r))}function t(...n){return N(...e(n))}function o(...n){return Object.assign({},...e(n))}return{mergeCss:O(t),assignCss:o}}var Vr=/([A-Z])/g,Wr=/^ms-/,Xr=O(r=>r.startsWith("--")?r:r.replace(Vr,"-$1").replace(Wr,"-ms-").toLowerCase()),qr="cm,mm,Q,in,pc,pt,px,em,ex,ch,rem,lh,rlh,vw,vh,vmin,vmax,vb,vi,svw,svh,lvw,lvh,dvw,dvh,cqw,cqh,cqi,cqb,cqmin,cqmax,%";`${qr.split(",").join("|")}`;function Fr(r,...e){const t=Object.getOwnPropertyDescriptors(r),o=Object.keys(t),n=a=>{const s={};for(let c=0;c<a.length;c++){const d=a[c];t[d]&&(Object.defineProperty(s,d,t[d]),delete t[d])}return s},i=a=>n(Array.isArray(a)?a:o.filter(a));return e.map(i).concat(n(o))}var Yr=(...r)=>r.filter(Boolean).reduce((e,t)=>Array.from(new Set([...e,...t])),[]);const $r="_hover,_focus,_focusWithin,_focusVisible,_disabled,_active,_visited,_target,_readOnly,_readWrite,_empty,_checked,_enabled,_expanded,_highlighted,_before,_after,_firstLetter,_firstLine,_marker,_selection,_file,_backdrop,_first,_last,_only,_even,_odd,_firstOfType,_lastOfType,_onlyOfType,_peerFocus,_peerHover,_peerActive,_peerFocusWithin,_peerFocusVisible,_peerDisabled,_peerChecked,_peerInvalid,_peerExpanded,_peerPlaceholderShown,_groupFocus,_groupHover,_groupActive,_groupFocusWithin,_groupFocusVisible,_groupDisabled,_groupChecked,_groupExpanded,_groupInvalid,_indeterminate,_required,_valid,_invalid,_autofill,_inRange,_outOfRange,_placeholder,_placeholderShown,_pressed,_selected,_default,_optional,_open,_closed,_fullscreen,_loading,_currentPage,_currentStep,_motionReduce,_motionSafe,_print,_landscape,_portrait,_dark,_light,_osDark,_osLight,_highContrast,_lessContrast,_moreContrast,_ltr,_rtl,_scrollbar,_scrollbarThumb,_scrollbarTrack,_horizontal,_vertical,_starting,sm,smOnly,smDown,md,mdOnly,mdDown,lg,lgOnly,lgDown,xl,xlOnly,xlDown,2xl,2xlOnly,2xlDown,smToMd,smToLg,smToXl,smTo2xl,mdToLg,mdToXl,mdTo2xl,lgToXl,lgTo2xl,xlTo2xl,@/xs,@/sm,@/md,@/lg,@/xl,@/2xl,@/3xl,@/4xl,@/5xl,@/6xl,@/7xl,@/8xl,base",fr=new Set($r.split(","));function M(r){return fr.has(r)||/^@|&|&$/.test(r)}const Hr=/^_/,Gr=/&|@/;function Kr(r){return r.map(e=>fr.has(e)?e.replace(Hr,""):Gr.test(e)?`[${gr(e.trim())}]`:e)}function Zr(r){return r.sort((e,t)=>{const o=M(e),n=M(t);return o&&!n?1:!o&&n?-1:0})}const Ur="aspectRatio:aspect,boxDecorationBreak:decoration,zIndex:z,boxSizing:box,objectPosition:obj-pos,objectFit:obj-fit,overscrollBehavior:overscroll,overscrollBehaviorX:overscroll-x,overscrollBehaviorY:overscroll-y,position:pos/1,top:top,left:left,insetInline:inset-x/insetX,insetBlock:inset-y/insetY,inset:inset,insetBlockEnd:inset-b,insetBlockStart:inset-t,insetInlineEnd:end/insetEnd/1,insetInlineStart:start/insetStart/1,right:right,bottom:bottom,float:float,visibility:vis,display:d,hideFrom:hide,hideBelow:show,flexBasis:basis,flex:flex,flexDirection:flex/flexDir,flexGrow:grow,flexShrink:shrink,gridTemplateColumns:grid-cols,gridTemplateRows:grid-rows,gridColumn:col-span,gridRow:row-span,gridColumnStart:col-start,gridColumnEnd:col-end,gridAutoFlow:grid-flow,gridAutoColumns:auto-cols,gridAutoRows:auto-rows,gap:gap,gridGap:gap,gridRowGap:gap-x,gridColumnGap:gap-y,rowGap:gap-x,columnGap:gap-y,justifyContent:justify,alignContent:content,alignItems:items,alignSelf:self,padding:p/1,paddingLeft:pl/1,paddingRight:pr/1,paddingTop:pt/1,paddingBottom:pb/1,paddingBlock:py/1/paddingY,paddingBlockEnd:pb,paddingBlockStart:pt,paddingInline:px/paddingX/1,paddingInlineEnd:pe/1/paddingEnd,paddingInlineStart:ps/1/paddingStart,marginLeft:ml/1,marginRight:mr/1,marginTop:mt/1,marginBottom:mb/1,margin:m/1,marginBlock:my/1/marginY,marginBlockEnd:mb,marginBlockStart:mt,marginInline:mx/1/marginX,marginInlineEnd:me/1/marginEnd,marginInlineStart:ms/1/marginStart,spaceX:space-x,spaceY:space-y,outlineWidth:ring-width/ringWidth,outlineColor:ring-color/ringColor,outline:ring/1,outlineOffset:ring-offset/ringOffset,divideX:divide-x,divideY:divide-y,divideColor:divide-color,divideStyle:divide-style,width:w/1,inlineSize:w,minWidth:min-w/minW,minInlineSize:min-w,maxWidth:max-w/maxW,maxInlineSize:max-w,height:h/1,blockSize:h,minHeight:min-h/minH,minBlockSize:min-h,maxHeight:max-h/maxH,maxBlockSize:max-b,color:text,fontFamily:font,fontSize:fs,fontWeight:fw,fontSmoothing:smoothing,fontVariantNumeric:numeric,letterSpacing:tracking,lineHeight:leading,textAlign:text-align,textDecoration:text-decor,textDecorationColor:text-decor-color,textEmphasisColor:text-emphasis-color,textDecorationStyle:decoration-style,textDecorationThickness:decoration-thickness,textUnderlineOffset:underline-offset,textTransform:text-transform,textIndent:indent,textShadow:text-shadow,textShadowColor:text-shadow/textShadowColor,textOverflow:text-overflow,verticalAlign:v-align,wordBreak:break,textWrap:text-wrap,truncate:truncate,lineClamp:clamp,listStyleType:list-type,listStylePosition:list-pos,listStyleImage:list-img,backgroundPosition:bg-pos/bgPosition,backgroundPositionX:bg-pos-x/bgPositionX,backgroundPositionY:bg-pos-y/bgPositionY,backgroundAttachment:bg-attach/bgAttachment,backgroundClip:bg-clip/bgClip,background:bg/1,backgroundColor:bg/bgColor,backgroundOrigin:bg-origin/bgOrigin,backgroundImage:bg-img/bgImage,backgroundRepeat:bg-repeat/bgRepeat,backgroundBlendMode:bg-blend/bgBlendMode,backgroundSize:bg-size/bgSize,backgroundGradient:bg-gradient/bgGradient,textGradient:text-gradient,gradientFromPosition:gradient-from-pos,gradientToPosition:gradient-to-pos,gradientFrom:gradient-from,gradientTo:gradient-to,gradientVia:gradient-via,gradientViaPosition:gradient-via-pos,borderRadius:rounded/1,borderTopLeftRadius:rounded-tl/roundedTopLeft,borderTopRightRadius:rounded-tr/roundedTopRight,borderBottomRightRadius:rounded-br/roundedBottomRight,borderBottomLeftRadius:rounded-bl/roundedBottomLeft,borderTopRadius:rounded-t/roundedTop,borderRightRadius:rounded-r/roundedRight,borderBottomRadius:rounded-b/roundedBottom,borderLeftRadius:rounded-l/roundedLeft,borderStartStartRadius:rounded-ss/roundedStartStart,borderStartEndRadius:rounded-se/roundedStartEnd,borderStartRadius:rounded-s/roundedStart,borderEndStartRadius:rounded-es/roundedEndStart,borderEndEndRadius:rounded-ee/roundedEndEnd,borderEndRadius:rounded-e/roundedEnd,border:border,borderWidth:border-w,borderTopWidth:border-tw,borderLeftWidth:border-lw,borderRightWidth:border-rw,borderBottomWidth:border-bw,borderColor:border,borderInline:border-x/borderX,borderInlineWidth:border-x/borderXWidth,borderInlineColor:border-x/borderXColor,borderBlock:border-y/borderY,borderBlockWidth:border-y/borderYWidth,borderBlockColor:border-y/borderYColor,borderLeft:border-l,borderLeftColor:border-l,borderInlineStart:border-s/borderStart,borderInlineStartWidth:border-s/borderStartWidth,borderInlineStartColor:border-s/borderStartColor,borderRight:border-r,borderRightColor:border-r,borderInlineEnd:border-e/borderEnd,borderInlineEndWidth:border-e/borderEndWidth,borderInlineEndColor:border-e/borderEndColor,borderTop:border-t,borderTopColor:border-t,borderBottom:border-b,borderBottomColor:border-b,borderBlockEnd:border-be,borderBlockEndColor:border-be,borderBlockStart:border-bs,borderBlockStartColor:border-bs,boxShadow:shadow/1,boxShadowColor:shadow-color/shadowColor,mixBlendMode:mix-blend,filter:filter,brightness:brightness,contrast:contrast,grayscale:grayscale,hueRotate:hue-rotate,invert:invert,saturate:saturate,sepia:sepia,dropShadow:drop-shadow,blur:blur,backdropFilter:backdrop,backdropBlur:backdrop-blur,backdropBrightness:backdrop-brightness,backdropContrast:backdrop-contrast,backdropGrayscale:backdrop-grayscale,backdropHueRotate:backdrop-hue-rotate,backdropInvert:backdrop-invert,backdropOpacity:backdrop-opacity,backdropSaturate:backdrop-saturate,backdropSepia:backdrop-sepia,borderCollapse:border,borderSpacing:border-spacing,borderSpacingX:border-spacing-x,borderSpacingY:border-spacing-y,tableLayout:table,transitionTimingFunction:ease,transitionDelay:delay,transitionDuration:duration,transitionProperty:transition-prop,transition:transition,animation:animation,animationName:animation-name,animationTimingFunction:animation-ease,animationDuration:animation-duration,animationDelay:animation-delay,transformOrigin:origin,rotate:rotate,rotateX:rotate-x,rotateY:rotate-y,rotateZ:rotate-z,scale:scale,scaleX:scale-x,scaleY:scale-y,translate:translate,translateX:translate-x/x,translateY:translate-y/y,translateZ:translate-z/z,accentColor:accent,caretColor:caret,scrollBehavior:scroll,scrollbar:scrollbar,scrollMargin:scroll-m,scrollMarginLeft:scroll-ml,scrollMarginRight:scroll-mr,scrollMarginTop:scroll-mt,scrollMarginBottom:scroll-mb,scrollMarginBlock:scroll-my/scrollMarginY,scrollMarginBlockEnd:scroll-mb,scrollMarginBlockStart:scroll-mt,scrollMarginInline:scroll-mx/scrollMarginX,scrollMarginInlineEnd:scroll-me,scrollMarginInlineStart:scroll-ms,scrollPadding:scroll-p,scrollPaddingBlock:scroll-pb/scrollPaddingY,scrollPaddingBlockStart:scroll-pt,scrollPaddingBlockEnd:scroll-pb,scrollPaddingInline:scroll-px/scrollPaddingX,scrollPaddingInlineEnd:scroll-pe,scrollPaddingInlineStart:scroll-ps,scrollPaddingLeft:scroll-pl,scrollPaddingRight:scroll-pr,scrollPaddingTop:scroll-pt,scrollPaddingBottom:scroll-pb,scrollSnapAlign:snap-align,scrollSnapStop:snap-stop,scrollSnapType:snap-type,scrollSnapStrictness:snap-strictness,scrollSnapMargin:snap-m,scrollSnapMarginTop:snap-mt,scrollSnapMarginBottom:snap-mb,scrollSnapMarginLeft:snap-ml,scrollSnapMarginRight:snap-mr,touchAction:touch,userSelect:select,fill:fill,stroke:stroke,strokeWidth:stroke-w,srOnly:sr,debug:debug,appearance:appearance,backfaceVisibility:backface,clipPath:clip-path,hyphens:hyphens,mask:mask,maskImage:mask-image,maskSize:mask-size,textSizeAdjust:text-adjust,container:cq,containerName:cq-name,containerType:cq-type,textStyle:textStyle",hr=new Map,yr=new Map;Ur.split(",").forEach(r=>{const[e,t]=r.split(":"),[o,...n]=t.split("/");hr.set(e,o),n.length&&n.forEach(i=>{yr.set(i==="1"?o:i,e)})});const V=r=>yr.get(r)||r,xr={conditions:{shift:Zr,finalize:Kr,breakpoints:{keys:["base","sm","md","lg","xl","2xl"]}},utility:{transform:(r,e)=>{const t=V(r);return{className:`${hr.get(t)||Xr(t)}_${gr(e)}`}},hasShorthand:!0,toHash:(r,e)=>e(r.join(":")),resolveShorthand:V}},Jr=Nr(xr),b=(...r)=>Jr(x(...r));b.raw=(...r)=>x(...r);const{mergeCss:x,assignCss:ne}=Mr(xr);function Qr(){let r="",e=0,t;for(;e<arguments.length;)(t=arguments[e++])&&typeof t=="string"&&(r&&(r+=" "),r+=t);return r}const W=r=>({base:{},variants:{},defaultVariants:{},compoundVariants:[],...r});function vr(r){const{base:e,variants:t,defaultVariants:o,compoundVariants:n}=W(r),i=p=>({...o,...pr(p)});function a(p={}){var k;const u=i(p);let h={...e};for(const[S,v]of Object.entries(u))(k=t[S])!=null&&k[v]&&(h=x(h,t[S][v]));const y=re(n,u);return x(h,y)}function s(p){const u=W(p.config),h=Yr(p.variantKeys,Object.keys(t));return vr({base:x(e,u.base),variants:Object.fromEntries(h.map(y=>[y,x(t[y],u.variants[y])])),defaultVariants:N(o,u.defaultVariants),compoundVariants:[...n,...u.compoundVariants]})}function c(p){return b(a(p))}const d=Object.keys(t);function m(p){return Fr(p,d)}const f=Object.fromEntries(Object.entries(t).map(([p,u])=>[p,Object.keys(u)]));return Object.assign(O(c),{__cva__:!0,variantMap:f,variantKeys:d,raw:a,config:r,merge:s,splitVariantProps:m,getVariantProps:i})}function re(r,e){let t={};return r.forEach(o=>{Object.entries(o).every(([i,a])=>i==="css"?!0:(Array.isArray(a)?a:[a]).some(c=>e[i]===c))&&(t=x(t,o.css))}),t}const ee=vr({base:{display:"inline-flex",alignItems:"center",justifyContent:"center",whiteSpace:"nowrap",rounded:"lg",fontSize:"md",fontWeight:"medium",gap:"2",transition:["colors"],cursor:"pointer",_disabled:{cursor:"not-allowed",opacity:50}},variants:{variant:{filled:{},outline:{border:"1px solid",bg:"white"},ghost:{bg:"transparent"}},colorScheme:{primary:{},neutral:{}},size:{sm:{h:9,paddingX:3},md:{h:10,paddingX:4,paddingY:2},lg:{h:11,paddingX:8},icon:{h:10,w:10}},loading:{true:{_disabled:{cursor:"wait"}}}},defaultVariants:{variant:"filled",colorScheme:"neutral",size:"md",loading:!1},compoundVariants:[{colorScheme:"primary",variant:"filled",css:{bgColor:"primary",color:"primary.foreground",_disabled:{bg:"primary",_hover:{bg:"primary"},_active:{bg:"primary"}},_hover:{bg:"primary.600"},_active:{bg:"primary.700"}}},{colorScheme:"neutral",variant:"filled",css:{bgColor:"neutral",color:"neutral.foreground",_disabled:{bg:"neutral",_hover:{bg:"neutral"},_active:{bg:"neutral"}},_hover:{bg:"neutral.200"},_active:{bg:"neutral.300"}}},{colorScheme:"primary",variant:"outline",css:{color:"primary.500",borderColor:"primary.500",_disabled:{_hover:{bg:"white"},_active:{bg:"white"}},_hover:{bg:"primary.100"},_active:{bg:"primary.200"}}},{colorScheme:"neutral",variant:"outline",css:{color:"neutral.500",borderColor:"neutral.500",_disabled:{bg:"transparent",_hover:{bg:"transparent"},_active:{bg:"transparent"}},_hover:{bg:"neutral.100"},_active:{bg:"neutral.200"}}},{colorScheme:"primary",variant:"ghost",css:{color:"primary.500",_disabled:{_hover:{bg:"transparent"},_active:{bg:"transparent"}},_hover:{bg:"primary.100"},_active:{bg:"primary.200"}}},{colorScheme:"neutral",variant:"ghost",css:{color:"neutral.500",_disabled:{_hover:{bg:"transparent"},_active:{bg:"transparent"}},_hover:{bg:"neutral.100"},_active:{bg:"neutral.200"}}}]});function g({type:r="button",loading:e=!1,loadingIcon:t=l.jsx(wr,{className:b({animation:"spin"}),size:20}),leftIcon:o,rightIcon:n,disabled:i=!1,variant:a,size:s,colorScheme:c,children:d,...m}){return l.jsxs("button",{className:Qr(ee({variant:a,colorScheme:c,size:s,loading:e})),type:r,disabled:i||e,"aria-disabled":i||e,"aria-busy":e,...m,children:[o,d,n,e&&t]})}g.__docgenInfo={description:"",methods:[],displayName:"Button",props:{loading:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},loadingIcon:{required:!1,tsType:{name:"ReactNode"},description:"",defaultValue:{value:"<LoaderCircleIcon className={css({ animation: 'spin' })} size={20} />",computed:!1}},rightIcon:{required:!1,tsType:{name:"ReactNode"},description:""},leftIcon:{required:!1,tsType:{name:"ReactNode"},description:""},type:{defaultValue:{value:"'button'",computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1}}};const X=["sm","md","lg","icon"],P=["primary","neutral"],A=["filled","outline","ghost"],ae={title:"Components/Button",component:g,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{size:{options:X,control:{type:"select"}},variant:{options:A,control:{type:"select"}},colorScheme:{options:P,control:{type:"select"}},disabled:{control:{type:"boolean"}},loading:{control:{type:"boolean"}}},args:{size:X[1],variant:A[0],colorScheme:P[1],disabled:!1,loading:!1}},C={args:{},render:r=>l.jsx(g,{...r,children:"Click me"})},w={args:{},render:()=>l.jsx("div",{className:b({display:"flex",flexDir:"row",gap:4}),children:A.map(r=>l.jsx(g,{variant:r,colorScheme:"neutral",children:"Click me"},r))})},B={args:{},render:()=>l.jsx("div",{className:b({display:"flex",flexDir:"row",gap:4}),children:P.map(r=>l.jsx(g,{colorScheme:r,children:"Click me"},r))})},j={args:{},render:()=>l.jsxs("div",{className:b({display:"flex",flexDir:"row",gap:4}),children:[l.jsx(g,{size:"sm",children:"Click me"}),l.jsx(g,{size:"md",children:"Click me"}),l.jsx(g,{size:"lg",children:"Click me"}),l.jsx(g,{size:"icon",children:l.jsx(T,{size:20})})]})},I={args:{},render:()=>l.jsxs("div",{className:b({display:"flex",flexDir:"row",gap:4}),children:[l.jsx(g,{loading:!0,children:"Click me"}),l.jsx(g,{loading:!0,loadingIcon:l.jsx(Cr,{size:20}),children:"Click me"})]})},z={args:{},render:()=>l.jsxs("div",{className:b({display:"flex",flexDir:"row",gap:4}),children:[l.jsx(g,{leftIcon:l.jsx(T,{size:20}),children:"Click me"}),l.jsx(g,{rightIcon:l.jsx(T,{size:20}),children:"Click me"})]})},R={args:{},render:()=>l.jsx("div",{className:b({display:"flex",flexDir:"row",gap:4}),children:l.jsx(g,{disabled:!0,children:"Click me"})})};var q,F,Y;C.parameters={...C.parameters,docs:{...(q=C.parameters)==null?void 0:q.docs,source:{originalSource:`{
  args: {},
  render: (props: ButtonProps) => {
    return <Button {...props}>Click me</Button>;
  }
}`,...(Y=(F=C.parameters)==null?void 0:F.docs)==null?void 0:Y.source}}};var $,H,G;w.parameters={...w.parameters,docs:{...($=w.parameters)==null?void 0:$.docs,source:{originalSource:`{
  args: {},
  render: () => {
    return <div className={css({
      display: 'flex',
      flexDir: 'row',
      gap: 4
    })}>
        {variants.map(variant => <Button variant={variant} colorScheme="neutral" key={variant}>
            Click me
          </Button>)}
      </div>;
  }
}`,...(G=(H=w.parameters)==null?void 0:H.docs)==null?void 0:G.source}}};var K,Z,U;B.parameters={...B.parameters,docs:{...(K=B.parameters)==null?void 0:K.docs,source:{originalSource:`{
  args: {},
  render: () => {
    return <div className={css({
      display: 'flex',
      flexDir: 'row',
      gap: 4
    })}>
        {colors.map(color => <Button colorScheme={color} key={color}>
            Click me
          </Button>)}
      </div>;
  }
}`,...(U=(Z=B.parameters)==null?void 0:Z.docs)==null?void 0:U.source}}};var J,Q,rr;j.parameters={...j.parameters,docs:{...(J=j.parameters)==null?void 0:J.docs,source:{originalSource:`{
  args: {},
  render: () => {
    return <div className={css({
      display: 'flex',
      flexDir: 'row',
      gap: 4
    })}>
        <Button size="sm">Click me</Button>
        <Button size="md">Click me</Button>
        <Button size="lg">Click me</Button>
        <Button size="icon">
          <SearchIcon size={20} />
        </Button>
      </div>;
  }
}`,...(rr=(Q=j.parameters)==null?void 0:Q.docs)==null?void 0:rr.source}}};var er,tr,or;I.parameters={...I.parameters,docs:{...(er=I.parameters)==null?void 0:er.docs,source:{originalSource:`{
  args: {},
  render: () => {
    return <div className={css({
      display: 'flex',
      flexDir: 'row',
      gap: 4
    })}>
        <Button loading>Click me</Button>
        <Button loading loadingIcon={<EllipsisIcon size={20} />}>
          Click me
        </Button>
      </div>;
  }
}`,...(or=(tr=I.parameters)==null?void 0:tr.docs)==null?void 0:or.source}}};var nr,ar,ir;z.parameters={...z.parameters,docs:{...(nr=z.parameters)==null?void 0:nr.docs,source:{originalSource:`{
  args: {},
  render: () => {
    return <div className={css({
      display: 'flex',
      flexDir: 'row',
      gap: 4
    })}>
        <Button leftIcon={<SearchIcon size={20} />}>Click me</Button>
        <Button rightIcon={<SearchIcon size={20} />}>Click me</Button>
      </div>;
  }
}`,...(ir=(ar=z.parameters)==null?void 0:ar.docs)==null?void 0:ir.source}}};var sr,lr,cr;R.parameters={...R.parameters,docs:{...(sr=R.parameters)==null?void 0:sr.docs,source:{originalSource:`{
  args: {},
  render: () => {
    return <div className={css({
      display: 'flex',
      flexDir: 'row',
      gap: 4
    })}>
        <Button disabled>Click me</Button>
      </div>;
  }
}`,...(cr=(lr=R.parameters)==null?void 0:lr.docs)==null?void 0:cr.source}}};const ie=["Default","Variant","ColorScheme","Sizes","Loading","Icon","Disabled"];export{B as ColorScheme,C as Default,R as Disabled,z as Icon,I as Loading,j as Sizes,w as Variant,ie as __namedExportsOrder,ae as default};
